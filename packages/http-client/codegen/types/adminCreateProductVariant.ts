/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * Medusa API
 * OpenAPI spec version: 1.0.0
 */
import type { AdminCreateProductVariantInventoryKit } from './adminCreateProductVariantInventoryKit';
import type { AdminCreateProductVariantMetadata } from './adminCreateProductVariantMetadata';
import type { AdminCreateProductVariantOptions } from './adminCreateProductVariantOptions';
import type { AdminCreateProductVariantPrice } from './adminCreateProductVariantPrice';

/**
 * The product variant's details.
 */
export interface AdminCreateProductVariant {
  /** Whether it's allowed to order this variant when it's out of stock. */
  allow_backorder?: boolean;
  /** The variant's barcode. */
  barcode?: string;
  /** The variant's EAN. */
  ean?: string;
  /** The variant's height. */
  height?: number;
  /** The variant's HS code. */
  hs_code?: string;
  /** The variant's inventory items to create. */
  inventory_items?: AdminCreateProductVariantInventoryKit[];
  /** The variant's length. */
  length?: number;
  /** Whether Medusa manages the variant's inventory quantity. If disabled, the product variant is always considered in stock. */
  manage_inventory?: boolean;
  /** The variant's material. */
  material?: string;
  /** The variant's metadata, used to store custom key-value pairs. */
  metadata?: AdminCreateProductVariantMetadata;
  /** The variant's MID code. */
  mid_code?: string;
  /** The variant's options, where the key is an option's name, and the value is the option's value. */
  options?: AdminCreateProductVariantOptions;
  /** The variant's origin country. */
  origin_country?: string;
  /** The variant's prices. */
  prices: AdminCreateProductVariantPrice[];
  /** The variant's SKU. */
  sku?: string;
  /** The variant's title. */
  title: string;
  /** The variant's UPC. */
  upc?: string;
  /** The sorting order of the variant among other variants in the product. */
  variant_rank?: number;
  /** The variant's weight. */
  weight?: number;
  /** The variant's width. */
  width?: number;
}
