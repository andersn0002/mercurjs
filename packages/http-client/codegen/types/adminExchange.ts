/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * Medusa API
 * OpenAPI spec version: 1.0.0
 */
import type { BaseExchangeItem } from './baseExchangeItem';
import type { AdminExchangeMetadata } from './adminExchangeMetadata';
import type { BaseOrder } from './baseOrder';
import type { AdminReturn } from './adminReturn';
import type { AdminReturnItem } from './adminReturnItem';
import type { BaseOrderShippingMethod } from './baseOrderShippingMethod';
import type { BaseOrderTransaction } from './baseOrderTransaction';

/**
 * The exchange's details.
 */
export interface AdminExchange {
  /** The new items (outbound) sent by the exchange. */
  additional_items: BaseExchangeItem[];
  /** Whether variants that are out-of-stock can still be added as additional or outbound items. */
  allow_backorder?: boolean;
  /** The date the exchange was canceled. */
  canceled_at: string;
  /** The date that the exchange was created. */
  created_at: string;
  /** The ID of the user that created the exchange. */
  created_by?: string;
  /** The date the exchange was deleted. */
  deleted_at: string;
  /** The amount to be exchanged or refunded. If the amount is negative, it must be refunded. If positive, additional payment is required from the customer. */
  difference_due?: number;
  /** The exchange's display ID. */
  display_id?: string;
  /** The exchange's ID. */
  id: string;
  /** The exchange's metadata, can hold custom key-value pairs. */
  metadata?: AdminExchangeMetadata;
  /** Whether to send the customer notifications when the exchange is updated. */
  no_notification?: boolean;
  order?: BaseOrder;
  /** The ID of the order the exchange is created for. */
  order_id: string;
  /** The version of the order once the exchange is applied. */
  order_version?: string;
  return?: AdminReturn;
  /** The ID of the associated exchange. */
  return_id?: string;
  /** The items returned (inbound) by the exchange. */
  return_items: AdminReturnItem[];
  /** The shipping methods used to send the new (outbound) items. */
  shipping_methods?: BaseOrderShippingMethod[];
  /** The exchange's transactions. */
  transactions?: BaseOrderTransaction[];
  /** The date that the exchange was updated. */
  updated_at: string;
}
