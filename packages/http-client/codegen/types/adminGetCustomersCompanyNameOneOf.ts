/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * Medusa API
 * OpenAPI spec version: 1.0.0
 */
import type { AdminGetCustomersCompanyNameOneOfAndItem } from './adminGetCustomersCompanyNameOneOfAndItem';
import type { AdminGetCustomersCompanyNameOneOfEq } from './adminGetCustomersCompanyNameOneOfEq';
import type { AdminGetCustomersCompanyNameOneOfGt } from './adminGetCustomersCompanyNameOneOfGt';
import type { AdminGetCustomersCompanyNameOneOfGte } from './adminGetCustomersCompanyNameOneOfGte';
import type { AdminGetCustomersCompanyNameOneOfInItem } from './adminGetCustomersCompanyNameOneOfInItem';
import type { AdminGetCustomersCompanyNameOneOfLt } from './adminGetCustomersCompanyNameOneOfLt';
import type { AdminGetCustomersCompanyNameOneOfLte } from './adminGetCustomersCompanyNameOneOfLte';
import type { AdminGetCustomersCompanyNameOneOfNe } from './adminGetCustomersCompanyNameOneOfNe';
import type { AdminGetCustomersCompanyNameOneOfNinItem } from './adminGetCustomersCompanyNameOneOfNinItem';
import type { AdminGetCustomersCompanyNameOneOfNot } from './adminGetCustomersCompanyNameOneOfNot';
import type { AdminGetCustomersCompanyNameOneOfOrItem } from './adminGetCustomersCompanyNameOneOfOrItem';

/**
 * Filter by conditions on the customer's company name.
 */
export type AdminGetCustomersCompanyNameOneOf = {
  /** Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters. */
  $and?: AdminGetCustomersCompanyNameOneOfAndItem[];
  /** Filter arrays that contain all values of this parameter. */
  $contained?: string[];
  /** Filter arrays that contain some of the values of this parameter. */
  $contains?: string[];
  $eq?: AdminGetCustomersCompanyNameOneOfEq;
  /** Filter by whether a value for this parameter exists (not `null`). */
  $exists?: boolean;
  /** Filter to apply on full-text properties. */
  $fulltext?: string;
  $gt?: AdminGetCustomersCompanyNameOneOfGt;
  $gte?: AdminGetCustomersCompanyNameOneOfGte;
  /** Apply a case-insensitive `like` filter. Useful for strings only. */
  $ilike?: string;
  /** Filter by values in this array. */
  $in?: AdminGetCustomersCompanyNameOneOfInItem[];
  /** Apply a `like` filter. Useful for strings only. */
  $like?: string;
  $lt?: AdminGetCustomersCompanyNameOneOfLt;
  $lte?: AdminGetCustomersCompanyNameOneOfLte;
  $ne?: AdminGetCustomersCompanyNameOneOfNe;
  /** Filter by values not in this array. */
  $nin?: AdminGetCustomersCompanyNameOneOfNinItem[];
  $not?: AdminGetCustomersCompanyNameOneOfNot;
  /** Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters. */
  $or?: AdminGetCustomersCompanyNameOneOfOrItem[];
  /** Filter arrays that have overlapping values with this parameter. */
  $overlap?: string[];
  /** Apply a regex filter. Useful for strings only. */
  $re?: string;
};
