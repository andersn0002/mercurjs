/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * Medusa API
 * OpenAPI spec version: 1.0.0
 */
import type { AdminGetCustomersEmailOneOfAndItem } from './adminGetCustomersEmailOneOfAndItem';
import type { AdminGetCustomersEmailOneOfEq } from './adminGetCustomersEmailOneOfEq';
import type { AdminGetCustomersEmailOneOfGt } from './adminGetCustomersEmailOneOfGt';
import type { AdminGetCustomersEmailOneOfGte } from './adminGetCustomersEmailOneOfGte';
import type { AdminGetCustomersEmailOneOfInItem } from './adminGetCustomersEmailOneOfInItem';
import type { AdminGetCustomersEmailOneOfLt } from './adminGetCustomersEmailOneOfLt';
import type { AdminGetCustomersEmailOneOfLte } from './adminGetCustomersEmailOneOfLte';
import type { AdminGetCustomersEmailOneOfNe } from './adminGetCustomersEmailOneOfNe';
import type { AdminGetCustomersEmailOneOfNinItem } from './adminGetCustomersEmailOneOfNinItem';
import type { AdminGetCustomersEmailOneOfNot } from './adminGetCustomersEmailOneOfNot';
import type { AdminGetCustomersEmailOneOfOrItem } from './adminGetCustomersEmailOneOfOrItem';

/**
 * Filter by conditions on the customer email.
 */
export type AdminGetCustomersEmailOneOf = {
  /** Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters. */
  $and?: AdminGetCustomersEmailOneOfAndItem[];
  /** Filter arrays that contain all values of this parameter. */
  $contained?: string[];
  /** Filter arrays that contain some of the values of this parameter. */
  $contains?: string[];
  $eq?: AdminGetCustomersEmailOneOfEq;
  /** Filter by whether a value for this parameter exists (not `null`). */
  $exists?: boolean;
  /** Filter to apply on full-text properties. */
  $fulltext?: string;
  $gt?: AdminGetCustomersEmailOneOfGt;
  $gte?: AdminGetCustomersEmailOneOfGte;
  /** Apply a case-insensitive `like` filter. Useful for strings only. */
  $ilike?: string;
  /** Filter by values in this array. */
  $in?: AdminGetCustomersEmailOneOfInItem[];
  /** Apply a `like` filter. Useful for strings only. */
  $like?: string;
  $lt?: AdminGetCustomersEmailOneOfLt;
  $lte?: AdminGetCustomersEmailOneOfLte;
  $ne?: AdminGetCustomersEmailOneOfNe;
  /** Filter by values not in this array. */
  $nin?: AdminGetCustomersEmailOneOfNinItem[];
  $not?: AdminGetCustomersEmailOneOfNot;
  /** Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters. */
  $or?: AdminGetCustomersEmailOneOfOrItem[];
  /** Filter arrays that have overlapping values with this parameter. */
  $overlap?: string[];
  /** Apply a regex filter. Useful for strings only. */
  $re?: string;
};
