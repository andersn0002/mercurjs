/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * Medusa API
 * OpenAPI spec version: 1.0.0
 */
import type { AdminGetCustomersFirstNameOneOfAndItem } from './adminGetCustomersFirstNameOneOfAndItem';
import type { AdminGetCustomersFirstNameOneOfEq } from './adminGetCustomersFirstNameOneOfEq';
import type { AdminGetCustomersFirstNameOneOfGt } from './adminGetCustomersFirstNameOneOfGt';
import type { AdminGetCustomersFirstNameOneOfGte } from './adminGetCustomersFirstNameOneOfGte';
import type { AdminGetCustomersFirstNameOneOfInItem } from './adminGetCustomersFirstNameOneOfInItem';
import type { AdminGetCustomersFirstNameOneOfLt } from './adminGetCustomersFirstNameOneOfLt';
import type { AdminGetCustomersFirstNameOneOfLte } from './adminGetCustomersFirstNameOneOfLte';
import type { AdminGetCustomersFirstNameOneOfNe } from './adminGetCustomersFirstNameOneOfNe';
import type { AdminGetCustomersFirstNameOneOfNinItem } from './adminGetCustomersFirstNameOneOfNinItem';
import type { AdminGetCustomersFirstNameOneOfNot } from './adminGetCustomersFirstNameOneOfNot';
import type { AdminGetCustomersFirstNameOneOfOrItem } from './adminGetCustomersFirstNameOneOfOrItem';

/**
 * Filter by conditions on the first name.
 */
export type AdminGetCustomersFirstNameOneOf = {
  /** Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters. */
  $and?: AdminGetCustomersFirstNameOneOfAndItem[];
  /** Filter arrays that contain all values of this parameter. */
  $contained?: string[];
  /** Filter arrays that contain some of the values of this parameter. */
  $contains?: string[];
  $eq?: AdminGetCustomersFirstNameOneOfEq;
  /** Filter by whether a value for this parameter exists (not `null`). */
  $exists?: boolean;
  /** Filter to apply on full-text properties. */
  $fulltext?: string;
  $gt?: AdminGetCustomersFirstNameOneOfGt;
  $gte?: AdminGetCustomersFirstNameOneOfGte;
  /** Apply a case-insensitive `like` filter. Useful for strings only. */
  $ilike?: string;
  /** Filter by values in this array. */
  $in?: AdminGetCustomersFirstNameOneOfInItem[];
  /** Apply a `like` filter. Useful for strings only. */
  $like?: string;
  $lt?: AdminGetCustomersFirstNameOneOfLt;
  $lte?: AdminGetCustomersFirstNameOneOfLte;
  $ne?: AdminGetCustomersFirstNameOneOfNe;
  /** Filter by values not in this array. */
  $nin?: AdminGetCustomersFirstNameOneOfNinItem[];
  $not?: AdminGetCustomersFirstNameOneOfNot;
  /** Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters. */
  $or?: AdminGetCustomersFirstNameOneOfOrItem[];
  /** Filter arrays that have overlapping values with this parameter. */
  $overlap?: string[];
  /** Apply a regex filter. Useful for strings only. */
  $re?: string;
};
