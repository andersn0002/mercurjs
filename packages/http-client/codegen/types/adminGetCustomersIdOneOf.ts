/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * Medusa API
 * OpenAPI spec version: 1.0.0
 */
import type { AdminGetCustomersIdOneOfAndItem } from './adminGetCustomersIdOneOfAndItem';
import type { AdminGetCustomersIdOneOfEq } from './adminGetCustomersIdOneOfEq';
import type { AdminGetCustomersIdOneOfGt } from './adminGetCustomersIdOneOfGt';
import type { AdminGetCustomersIdOneOfGte } from './adminGetCustomersIdOneOfGte';
import type { AdminGetCustomersIdOneOfInItem } from './adminGetCustomersIdOneOfInItem';
import type { AdminGetCustomersIdOneOfLt } from './adminGetCustomersIdOneOfLt';
import type { AdminGetCustomersIdOneOfLte } from './adminGetCustomersIdOneOfLte';
import type { AdminGetCustomersIdOneOfNe } from './adminGetCustomersIdOneOfNe';
import type { AdminGetCustomersIdOneOfNinItem } from './adminGetCustomersIdOneOfNinItem';
import type { AdminGetCustomersIdOneOfNot } from './adminGetCustomersIdOneOfNot';
import type { AdminGetCustomersIdOneOfOrItem } from './adminGetCustomersIdOneOfOrItem';

/**
 * Filters to apply on the customer ID.
 */
export type AdminGetCustomersIdOneOf = {
  /** Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters. */
  $and?: AdminGetCustomersIdOneOfAndItem[];
  /** Filter arrays that contain all values of this parameter. */
  $contained?: string[];
  /** Filter arrays that contain some of the values of this parameter. */
  $contains?: string[];
  $eq?: AdminGetCustomersIdOneOfEq;
  /** Filter by whether a value for this parameter exists (not `null`). */
  $exists?: boolean;
  /** Filter to apply on full-text properties. */
  $fulltext?: string;
  $gt?: AdminGetCustomersIdOneOfGt;
  $gte?: AdminGetCustomersIdOneOfGte;
  /** Apply a case-insensitive `like` filter. Useful for strings only. */
  $ilike?: string;
  /** Filter by values in this array. */
  $in?: AdminGetCustomersIdOneOfInItem[];
  /** Apply a `like` filter. Useful for strings only. */
  $like?: string;
  $lt?: AdminGetCustomersIdOneOfLt;
  $lte?: AdminGetCustomersIdOneOfLte;
  $ne?: AdminGetCustomersIdOneOfNe;
  /** Filter by values not in this array. */
  $nin?: AdminGetCustomersIdOneOfNinItem[];
  $not?: AdminGetCustomersIdOneOfNot;
  /** Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters. */
  $or?: AdminGetCustomersIdOneOfOrItem[];
  /** Filter arrays that have overlapping values with this parameter. */
  $overlap?: string[];
  /** Apply a regex filter. Useful for strings only. */
  $re?: string;
};
