/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * Medusa API
 * OpenAPI spec version: 1.0.0
 */
import type { BasePaymentCollectionMetadata } from './basePaymentCollectionMetadata';
import type { BasePaymentProvider } from './basePaymentProvider';
import type { BasePaymentSession } from './basePaymentSession';
import type { BasePayment } from './basePayment';
import type { BasePaymentCollectionStatus } from './basePaymentCollectionStatus';

/**
 * The payment collection's details.
 */
export interface BasePaymentCollection {
  /** The total amount to be paid. */
  amount: number;
  /** The total authorized amount of the collection's payments. */
  authorized_amount?: number;
  /** The total captured amount of the collection's payments. */
  captured_amount?: number;
  /** The date the payment collection was completed. */
  completed_at?: string;
  /** The date the payment collection was created. */
  created_at?: string;
  /** The payment collection's currency code. */
  currency_code: string;
  /** The payment collection's ID. */
  id: string;
  /** The payment collection's metadata, can hold custom key-value pairs. */
  metadata?: BasePaymentCollectionMetadata;
  /** The payment provider used to process the collection's payments and sessions. */
  payment_providers: BasePaymentProvider[];
  /** The payment collection's payment sessions. */
  payment_sessions?: BasePaymentSession[];
  /** The payment collection's payments. */
  payments?: BasePayment[];
  /** The total refunded amount of the collection's payments. */
  refunded_amount?: number;
  /** The ID of the region this payment collection is associated with. */
  region_id: string;
  /** The payment collection's status. */
  status: BasePaymentCollectionStatus;
  /** The date the payment collection was updated. */
  updated_at?: string;
}
