/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * Medusa API
 * OpenAPI spec version: 1.0.0
 */
import type { StoreCartLineItemAdjustmentsItem } from './storeCartLineItemAdjustmentsItem';
import type { StoreCartLineItemCart } from './storeCartLineItemCart';
import type { StoreCartLineItemMetadata } from './storeCartLineItemMetadata';
import type { StoreProduct } from './storeProduct';
import type { StoreCartLineItemTaxLinesItem } from './storeCartLineItemTaxLinesItem';
import type { StoreProductVariant } from './storeProductVariant';
import type { StoreCartLineItemVariantOptionValues } from './storeCartLineItemVariantOptionValues';

/**
 * The item's details.
 */
export interface StoreCartLineItem {
  /** The item's adjustments. */
  adjustments?: StoreCartLineItemAdjustmentsItem[];
  cart: StoreCartLineItemCart;
  /** The ID of the cart that the line item belongs to. */
  cart_id: string;
  /** The original price of the item before a promotion or sale. */
  compare_at_unit_price?: number;
  /** The date the item was created. */
  created_at?: string;
  /** The date the item was deleted. */
  deleted_at?: string;
  /** The total taxes applied on the discounted amount. */
  discount_tax_total: number;
  /** The total discount of the item. */
  discount_total: number;
  /** The item's ID. */
  id: string;
  /** Whether the item is discountable. */
  is_discountable: boolean;
  /** Whether the item's price includes taxes. */
  is_tax_inclusive: boolean;
  /** The item's total excluding taxes, including promotions. */
  item_subtotal: number;
  /** The total taxes of the item including promotions. */
  item_tax_total: number;
  /** The item's total including taxes and promotions. */
  item_total: number;
  /** The item's metadata, can hold custom key-value pairs. */
  metadata?: StoreCartLineItemMetadata;
  /** The item's total excluding taxes, including promotions. */
  original_subtotal: number;
  /** The total taxes of the item excluding promotions. */
  original_tax_total: number;
  /** The item's total including taxes, excluding promotions. */
  original_total: number;
  product?: StoreProduct;
  /** The ID of the associated product's collection. */
  product_collection?: string;
  /** The item's product description. */
  product_description?: string;
  /** The item's product handle. */
  product_handle?: string;
  /** The ID of the associated product. */
  product_id?: string;
  /** The item's product subtitle. */
  product_subtitle?: string;
  /** The item's product title. */
  product_title?: string;
  /** The ID of the associated product's type. */
  product_type?: string;
  /** The item's quantity. */
  quantity: number;
  /** Whether the item requires shipping. */
  requires_shipping: boolean;
  /** The item's subtitle. */
  subtitle?: string;
  /** The item's total excluding taxes, including promotions. */
  subtotal: number;
  /** The item's tax lines. */
  tax_lines?: StoreCartLineItemTaxLinesItem[];
  /** The total taxes of the item including promotions. */
  tax_total: number;
  /** The item's thumbnail URL. */
  thumbnail?: string;
  /** The item's title. */
  title: string;
  /** The item's total including taxes and promotions. */
  total: number;
  /** The price of a single quantity of the item. */
  unit_price: number;
  /** The date the item was updated. */
  updated_at?: string;
  variant?: StoreProductVariant;
  /** The item's variant barcode. */
  variant_barcode?: string;
  /** The ID of the associated product variant. */
  variant_id?: string;
  /** The associated variant's value for the product's options. */
  variant_option_values?: StoreCartLineItemVariantOptionValues;
  /** The item's variant SKU. */
  variant_sku?: string;
  /** The item's variant title. */
  variant_title?: string;
}
