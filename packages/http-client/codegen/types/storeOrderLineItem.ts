/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * Medusa API
 * OpenAPI spec version: 1.0.0
 */
import type { StoreOrderLineItemAdjustmentsItem } from './storeOrderLineItemAdjustmentsItem';
import type { StoreOrderLineItemDetail } from './storeOrderLineItemDetail';
import type { StoreOrderLineItemMetadata } from './storeOrderLineItemMetadata';
import type { StoreProduct } from './storeProduct';
import type { StoreOrderLineItemTaxLinesItem } from './storeOrderLineItemTaxLinesItem';
import type { StoreProductVariant } from './storeProductVariant';
import type { StoreOrderLineItemVariantOptionValues } from './storeOrderLineItemVariantOptionValues';

/**
 * The item's details.
 */
export interface StoreOrderLineItem {
  /** The item's adjustments. */
  adjustments?: StoreOrderLineItemAdjustmentsItem[];
  /** The original price of the item before a promotion or sale. */
  compare_at_unit_price?: number;
  /** The date the item was created. */
  created_at: string;
  /** The item's detail. */
  detail: StoreOrderLineItemDetail;
  /** The total taxes applied on the discounted amount. */
  discount_tax_total: number;
  /** The total discount amount of the item. */
  discount_total: number;
  /** The item's ID. */
  id: string;
  /** Whether the item is discountable. */
  is_discountable: boolean;
  /** Whether the item is tax inclusive. */
  is_tax_inclusive: boolean;
  /** The item's total excluding taxes, including promotions. */
  item_subtotal: number;
  /** The total taxes of the item, including promotions. */
  item_tax_total: number;
  /** The total taxes of the item, including promotions. */
  item_total: number;
  /** The item's metadata, can hold custom key-value pairs. */
  metadata: StoreOrderLineItemMetadata;
  /** The item's total excluding taxes, including promotions. */
  original_subtotal: number;
  /** The total taxes of the item, excluding promotions. */
  original_tax_total: number;
  /** The item's total including taxes, excluding promotions. */
  original_total: number;
  product?: StoreProduct;
  /** The ID of the collection the item's product belongs to. */
  product_collection: string;
  /** The item's product description. */
  product_description: string;
  /** The item's product handle. */
  product_handle: string;
  /** The ID of the associated product. */
  product_id: string;
  /** The item's product subtitle. */
  product_subtitle: string;
  /** The item's product title. */
  product_title: string;
  /** The item's product type. */
  product_type: string;
  /** The ID of the associated product's type. */
  product_type_id: string;
  /** The item's quantity. */
  quantity: number;
  /** The total refundable amount of the item's total. */
  refundable_total: number;
  /** The total refundable amount of the item's total for a single quantity. */
  refundable_total_per_unit: number;
  /** Whether the item requires shipping. */
  requires_shipping: boolean;
  /** The item's subtitle. */
  subtitle: string;
  /** The item's subtotal excluding taxes, including promotions. */
  subtotal: number;
  /** The item's tax lines. */
  tax_lines?: StoreOrderLineItemTaxLinesItem[];
  /** The tax total of the item including promotions. */
  tax_total: number;
  /** The URL of the item's thumbnail. */
  thumbnail: string;
  /** The item's title. */
  title: string;
  /** The item's total, including taxes and promotions. */
  total: number;
  /** The item's unit price. */
  unit_price: number;
  /** The date the item was updated. */
  updated_at: string;
  variant?: StoreProductVariant;
  /** The item's variant barcode. */
  variant_barcode: string;
  /** The ID of the associated variant. */
  variant_id: string;
  /** The values of the item variant's options. */
  variant_option_values: StoreOrderLineItemVariantOptionValues;
  /** The item's variant SKU. */
  variant_sku: string;
  /** The item's variant title. */
  variant_title: string;
}
