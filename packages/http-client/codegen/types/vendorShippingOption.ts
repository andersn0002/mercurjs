/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * Medusa API
 * OpenAPI spec version: 1.0.0
 */
import type { VendorShippingOptionData } from './vendorShippingOptionData';
import type { VendorShippingOptionMetadata } from './vendorShippingOptionMetadata';
import type { VendorShippingOptionPriceType } from './vendorShippingOptionPriceType';
import type { VendorShippingOptionPrice } from './vendorShippingOptionPrice';
import type { VendorServiceZone } from './vendorServiceZone';
import type { VendorShippingOptionType } from './vendorShippingOptionType';

/**
 * The shipping option's details.
 */
export interface VendorShippingOption {
  /** The date the shipping option was created. */
  created_at: string;
  /** The shipping option's data, useful for the fulfillment provider handling fulfillments created from this option. */
  data: VendorShippingOptionData;
  /** The date the shipping option was deleted. */
  deleted_at: string;
  /** The shipping option's ID. */
  id: string;
  /** The shipping option's metadata, can hold custom key-value pairs. */
  metadata: VendorShippingOptionMetadata;
  /** The shipping option's name. */
  name: string;
  /** The shipping option's price type. If it's `flat`, the price is fixed and is set in the `prices` property. If it's `calculated`, the price is calculated on checkout by the associated fulfillment provider. */
  price_type: VendorShippingOptionPriceType;
  /** The shipping option's prices. If the `price_type` is `calculated`, this array will be empty since the price is calculated by the fulfillment provider during checkout. */
  prices: VendorShippingOptionPrice[];
  service_zone: VendorServiceZone;
  /** The ID of the service zone this option belongs to. */
  service_zone_id: string;
  /** The ID of the associated shipping option type. */
  shipping_option_type_id: string;
  type: VendorShippingOptionType;
  /** The date the shipping option was updated. */
  updated_at: string;
}
